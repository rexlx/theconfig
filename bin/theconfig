#!/bin/bash

# config script for fedora / redhat.

# turn on / off for debug
#set -x

#  These define paths  ##
#----------------------##
logdir=$HOME/bin/logs
data=$HOME/bin/data
scripts=$HOME/bin/scripts


# config log  ##
config_log=$logdir/config.log

viconfig () {
  vim ~/bin/theconfig
  . ~/.bashrc
  echo reloaded...
}

up () {
  /usr/bin/python3 $scripts/uptime.py
}

fwl () {
  firewall-cmd --state
}

# creates a border around a string
border () {
  local str="$*"
  local len=${#str}
  local i
  for (( i = 0; i < len + 4; ++i )); do
    printf "-"
  done
  printf "\n $str \n"
  for (( i = 0; i < len + 4; ++i )); do
    printf "-"
  done
  echo
}


# centers a string and fills whitespace
# NO newlines!
center() {
  termwidth="$(tput cols)"
  padding="$(printf "%0.1s" ={1..500})"
  printf "%*.*s %s %*.*s\n" 0 "$(((termwidth-2-${#1})/2))" \
  "$padding" "$1" 0 "$(((termwidth-1-${#1})/2))" "$padding"
}

# date stamp 11/02/2017 08:07:04 AM
dstamp() {
  date +"%x %r"
}

# date format for files 2022-04-05_07-14
fstamp () {
  date +"%F_%H-%M"
}

# unique stamp 1509628041
ustamp () {
  date +"%s"
}

# grep for IP addresses: cat SOMEFILE | grip
grip () {
  grep -E "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"
}

# returns JUST ip
grip-2 () {
  grep -Eo "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"
}

# the address of your DNS
dns () {
  nslookup google.com | head -n1 | grip-2
}


showport () {
  sudo  firewall-cmd --list-all
}

# show computer model
model () {
  sudo dmidecode | grep "Product Name" | tr "\t" "!"
}

# shows what virtualization platform VM is running on
virt () {
  isreal=$(sudo virt-what)
  if $isreal; then
    echo "not virtualized"
  else
    echo $isreal
  fi
}

# stuff i always install
normalize () {
  sudo dnf -y upgrade
  sudo dnf install fedora-workstation-repositories -y 2>> $config_log
  sudo dnf install dstat fping vim pciutils net-tools bind-utils \
         mlocate nfs-utils sysstat fio ioping tcpdump \
         wireshark sshpass virt-what iperf3 lm_sensors \
         hddtemp nmap python3-devel filezilla \
	 google-chrome-stable arc-theme numix-gtk-theme numix-icon-theme \
	 numix-icon-theme-circle 2>> $config_log
  sudo dnf group install "Development Tools" -y 2>> $config_log
  /usr/bin/python3 -m pip install --user -r $data/requirements.txt 2>> $config_log
}


# must be root
clear-ram () {
  sudo sync; echo 3 > /proc/sys/vm/drop_caches
}

sysinf () {
  /usr/bin/python3 $scripts/sysinf.py
}

get-sysinf () {
  ssh "$@" "python" < $scripts/sysinf.py
}

mark-user () {
 clear
 PS1="\e[0;31m[\u \W]\$ \e[m"
}

top-mem () {
  ps aux | sort -rnk 4 | head
}

show-writes () {
  /usr/bin/python3 $scripts/total_rw.py
}

keep-alive () {
  /usr/bin/python3 $scripts/keep_alive.py
}

convert-size () {
  /usr/bin/python3 $scripts/convert_size.py "$@"
}

watch-access () {
  sudo tail -f /var/log/httpd/access_log
}

getip () {
  /usr/bin/python3 $scripts/get_ns.py "$@"
}

foreach () {
    for i in ./*; do
        echo "$i"; "$@" "$i"
    done
}

isword () {
  grep "$@" /usr/share/dict/words
}

top-ten () {
  ps -eo pcpu,pid,user,args | grep -v "COMMAND" | sort -k1 -r -n | head -10
}

convert-time () {
  /usr/bin/python3 $scripts/convert_unixtime.py "$@"
}

convert-date () {
      /usr/bin/python3 $scripts/convert-date.py "$@"
}

add-comma () {
  /usr/bin/python3 -c "import sys;print('{:,}'.format(int(sys.argv[1])))" "$@"
}

describe () {
  /usr/bin/python3 -c "import sys;import pandas as pd;pd.set_option('display.float_format', lambda x: '%.3f' % x);x = pd.read_csv(sys.argv[1]);print(x.describe())" $@
}
"$@"
